<#@ include file="../t4/helpers.tt" #>
<#@ include file="../t4/Copyright.tt" #>
using System.Collections.Generic;
<#@ include file="../t4/CctsRepositoryNamespaces.tt" #>

<# 
	var library = MetaModel.GetPackageRelationsFor(metaEnumerationLiteral.ContainingEnumerationType).First().PackageType;
#>
namespace CctsRepository.<#= library.Name #>
{
    public partial class <#= metaEnumerationLiteral.ClassName #>Spec
    {
		public string Name { get; set; }
<#
		if (metaEnumerationLiteral.HasTaggedValues)
		{
#>

		#region Tagged Values
<# 
			foreach (var taggedValue in metaEnumerationLiteral.TaggedValues)
			{
#>

        ///<summary>
        /// Tagged value '<#= taggedValue.Name #>'.
        ///</summary>
		public <#= TaggedValuePropertyType(taggedValue) #> <#= TaggedValuePropertyName(taggedValue) #> { get; set; }
<#
			}
#>

		#endregion
<#
		}

		var cloned = FirstCharToLowerCase(metaEnumerationLiteral.ClassName);
#>

        public static <#= metaEnumerationLiteral.ClassName #>Spec Clone<#= metaEnumerationLiteral.ClassName #>(I<#= metaEnumerationLiteral.ClassName #> <#= cloned #>)
        {
            return new <#= metaEnumerationLiteral.ClassName #>Spec
                   {
                   	   Name = <#= cloned #>.Name,
<#
		foreach (var taggedValue in metaEnumerationLiteral.TaggedValues)
		{
			if (!(taggedValue.AutoGenerated))
			{
#>
					   <#= CopyTaggedValue(taggedValue, cloned) #>,
<#
			}
		}
#>
                   };
        }
    }
}
